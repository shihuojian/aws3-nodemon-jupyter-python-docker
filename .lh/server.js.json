{
    "sourceFile": "server.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 45,
            "patches": [
                {
                    "date": 1698116593430,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1698117013269,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -104,9 +104,9 @@\n             };\n             const filePath = \"/upload\"\n             await exitsFolder(filePath);\n             const filePathName = Path.join(process.cwd(),`${filePath}/${name}`)\n-            await file.promises.pipe(Fs.createWriteStream(filePathName));\n+            await file.pipe(Fs.createWriteStream(filePathName));\n             return h.response('success');\n             \n         }\n     });\n"
                },
                {
                    "date": 1698119448243,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -101,12 +101,25 @@\n                 } catch (e) {\n                 await Fs.promises.mkdir(absPath, {recursive: true});\n                 }\n             };\n-            const filePath = \"/upload\"\n+\n+            //同步写入文件流\n+            const asynWriteFile = async (readStream,filePath)=>{\n+                return new Promise(resolve=>{\n+                    const stream = Fs.createWriteStream(filePath);\n+                    readStream.pipe(stream);\n+                    stream.on('close', function (err) {\n+                        resolve()\n+                    });\n+                })\n+            }\n+\n+            let filePath = \"/upload\"\n             await exitsFolder(filePath);\n-            const filePathName = Path.join(process.cwd(),`${filePath}/${name}`)\n-            await file.pipe(Fs.createWriteStream(filePathName));\n+            filePath = Path.join(process.cwd(),`${filePath}/${name}`);\n+            // await file.pipe(Fs.createWriteStream(filePathName)); //异步写入文件\n+            await asynWriteFile(file,filePath)\n             return h.response('success');\n             \n         }\n     });\n"
                },
                {
                    "date": 1698374533796,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -220,10 +220,8 @@\n             }    \n         }\n     });\n \n-\n-\n     await server.start();\n     console.log('Server running on %s', server.info.uri);\n };\n \n"
                },
                {
                    "date": 1698374569778,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -19,9 +19,11 @@\n     credentials:{\n         accessKeyId:\"AKIAQ5QAJCD2C3HB2TXB\",\n         secretAccessKey:\"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\"\n     }\n-})\n+});\n+const Run = 'Running.txt'\n+const serverStatus = ()=>{ Fs.unlinkSync(Run);}\n const init = async () => {\n \n     const server = Hapi.server({\n         port: 8888,\n@@ -38,8 +40,9 @@\n     server.route({\n         method: 'GET',\n         path: '/',\n         handler: async (request, h)=> {\n+            if(Fs.existsSync(Run)){await Hoek.wait(1000 * 5);}\n             const context = {title: 'RVc'};\n             return h.view('index', context);\n         }\n     });\n"
                },
                {
                    "date": 1698374602322,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -41,8 +41,10 @@\n         method: 'GET',\n         path: '/',\n         handler: async (request, h)=> {\n             if(Fs.existsSync(Run)){await Hoek.wait(1000 * 5);}\n+\n+            \n             const context = {title: 'RVc'};\n             return h.view('index', context);\n         }\n     });\n"
                },
                {
                    "date": 1698374611963,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -42,9 +42,9 @@\n         path: '/',\n         handler: async (request, h)=> {\n             if(Fs.existsSync(Run)){await Hoek.wait(1000 * 5);}\n \n-            \n+            await Hoek.wait(1000);\n             const context = {title: 'RVc'};\n             return h.view('index', context);\n         }\n     });\n"
                },
                {
                    "date": 1698374617532,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -43,8 +43,9 @@\n         handler: async (request, h)=> {\n             if(Fs.existsSync(Run)){await Hoek.wait(1000 * 5);}\n \n             await Hoek.wait(1000);\n+            serverStatus();\n             const context = {title: 'RVc'};\n             return h.view('index', context);\n         }\n     });\n"
                },
                {
                    "date": 1698374649559,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -41,9 +41,8 @@\n         method: 'GET',\n         path: '/',\n         handler: async (request, h)=> {\n             if(Fs.existsSync(Run)){await Hoek.wait(1000 * 5);}\n-\n             await Hoek.wait(1000);\n             serverStatus();\n             const context = {title: 'RVc'};\n             return h.view('index', context);\n"
                },
                {
                    "date": 1698374737071,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -40,13 +40,17 @@\n     server.route({\n         method: 'GET',\n         path: '/',\n         handler: async (request, h)=> {\n-            if(Fs.existsSync(Run)){await Hoek.wait(1000 * 5);}\n-            await Hoek.wait(1000);\n-            serverStatus();\n-            const context = {title: 'RVc'};\n-            return h.view('index', context);\n+            try{\n+                if(Fs.existsSync(Run)){await Hoek.wait(1000 * 5);}\n+                await Hoek.wait(1000);\n+                serverStatus();\n+                const context = {title: 'RVc'};\n+                return h.view('index', context);\n+            }catch(err){\n+                throw Boom.badRequest(error)\n+            }\n         }\n     });\n \n     //node 执行shell并传递参数给python实例\n"
                },
                {
                    "date": 1698374756904,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -46,9 +46,9 @@\n                 await Hoek.wait(1000);\n                 serverStatus();\n                 const context = {title: 'RVc'};\n                 return h.view('index', context);\n-            }catch(err){\n+            }catch(error){\n                 throw Boom.badRequest(error)\n             }\n         }\n     });\n"
                },
                {
                    "date": 1698374806410,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -43,8 +43,9 @@\n         handler: async (request, h)=> {\n             try{\n                 if(Fs.existsSync(Run)){await Hoek.wait(1000 * 5);}\n                 await Hoek.wait(1000);\n+                Fs.writeFileSync(Run, 'Hello World');\n                 serverStatus();\n                 const context = {title: 'RVc'};\n                 return h.view('index', context);\n             }catch(error){\n"
                },
                {
                    "date": 1698374819294,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -41,12 +41,12 @@\n         method: 'GET',\n         path: '/',\n         handler: async (request, h)=> {\n             try{\n-                if(Fs.existsSync(Run)){await Hoek.wait(1000 * 5);}\n-                await Hoek.wait(1000);\n-                Fs.writeFileSync(Run, 'Hello World');\n-                serverStatus();\n+                // if(Fs.existsSync(Run)){await Hoek.wait(1000 * 5);}\n+                // await Hoek.wait(1000);\n+                // Fs.writeFileSync(Run, 'Hello World');\n+                // serverStatus();\n                 const context = {title: 'RVc'};\n                 return h.view('index', context);\n             }catch(error){\n                 throw Boom.badRequest(error)\n"
                },
                {
                    "date": 1698374824882,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -41,12 +41,12 @@\n         method: 'GET',\n         path: '/',\n         handler: async (request, h)=> {\n             try{\n-                // if(Fs.existsSync(Run)){await Hoek.wait(1000 * 5);}\n-                // await Hoek.wait(1000);\n-                // Fs.writeFileSync(Run, 'Hello World');\n-                // serverStatus();\n+                if(Fs.existsSync(Run)){await Hoek.wait(1000 * 5);}\n+                await Hoek.wait(1000);\n+                Fs.writeFileSync(Run, 'Hello World');\n+                serverStatus();\n                 const context = {title: 'RVc'};\n                 return h.view('index', context);\n             }catch(error){\n                 throw Boom.badRequest(error)\n"
                },
                {
                    "date": 1698374841043,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -44,9 +44,9 @@\n             try{\n                 if(Fs.existsSync(Run)){await Hoek.wait(1000 * 5);}\n                 await Hoek.wait(1000);\n                 Fs.writeFileSync(Run, 'Hello World');\n-                serverStatus();\n+                // serverStatus();\n                 const context = {title: 'RVc'};\n                 return h.view('index', context);\n             }catch(error){\n                 throw Boom.badRequest(error)\n"
                },
                {
                    "date": 1698374930915,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -42,11 +42,17 @@\n         path: '/',\n         handler: async (request, h)=> {\n             try{\n                 if(Fs.existsSync(Run)){await Hoek.wait(1000 * 5);}\n-                await Hoek.wait(1000);\n+                \n                 Fs.writeFileSync(Run, 'Hello World');\n-                // serverStatus();\n+                \n+                const save = async ()=>{\n+                    await Hoek.wait(1000);\n+                    // serverStatus();\n+                }\n+\n+                save();\n                 const context = {title: 'RVc'};\n                 return h.view('index', context);\n             }catch(error){\n                 throw Boom.badRequest(error)\n"
                },
                {
                    "date": 1698374945743,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -42,14 +42,13 @@\n         path: '/',\n         handler: async (request, h)=> {\n             try{\n                 if(Fs.existsSync(Run)){await Hoek.wait(1000 * 5);}\n-                \n                 Fs.writeFileSync(Run, 'Hello World');\n                 \n                 const save = async ()=>{\n-                    await Hoek.wait(1000);\n-                    // serverStatus();\n+                    await Hoek.wait(10000);\n+                    serverStatus();\n                 }\n \n                 save();\n                 const context = {title: 'RVc'};\n"
                },
                {
                    "date": 1698374975306,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -46,8 +46,9 @@\n                 Fs.writeFileSync(Run, 'Hello World');\n                 \n                 const save = async ()=>{\n                     await Hoek.wait(10000);\n+                    console.log(\"执行成功！\")\n                     serverStatus();\n                 }\n \n                 save();\n"
                },
                {
                    "date": 1698375022145,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -45,9 +45,9 @@\n                 if(Fs.existsSync(Run)){await Hoek.wait(1000 * 5);}\n                 Fs.writeFileSync(Run, 'Hello World');\n                 \n                 const save = async ()=>{\n-                    await Hoek.wait(10000);\n+                    await Hoek.wait(20000);\n                     console.log(\"执行成功！\")\n                     serverStatus();\n                 }\n \n"
                },
                {
                    "date": 1698375059691,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -45,9 +45,9 @@\n                 if(Fs.existsSync(Run)){await Hoek.wait(1000 * 5);}\n                 Fs.writeFileSync(Run, 'Hello World');\n                 \n                 const save = async ()=>{\n-                    await Hoek.wait(20000);\n+                    await Hoek.wait(1000 * 60 * 10);\n                     console.log(\"执行成功！\")\n                     serverStatus();\n                 }\n \n"
                },
                {
                    "date": 1698375714034,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -41,9 +41,9 @@\n         method: 'GET',\n         path: '/',\n         handler: async (request, h)=> {\n             try{\n-                if(Fs.existsSync(Run)){await Hoek.wait(1000 * 5);}\n+                if(Fs.existsSync(Run)){await Hoek.wait(1000 * 3);}\n                 Fs.writeFileSync(Run, 'Hello World');\n                 \n                 const save = async ()=>{\n                     await Hoek.wait(1000 * 60 * 10);\n"
                },
                {
                    "date": 1698375733867,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -43,8 +43,9 @@\n         handler: async (request, h)=> {\n             try{\n                 if(Fs.existsSync(Run)){await Hoek.wait(1000 * 3);}\n                 Fs.writeFileSync(Run, 'Hello World');\n+                console.log(request.query)\n                 \n                 const save = async ()=>{\n                     await Hoek.wait(1000 * 60 * 10);\n                     console.log(\"执行成功！\")\n"
                },
                {
                    "date": 1698375743183,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -43,9 +43,9 @@\n         handler: async (request, h)=> {\n             try{\n                 if(Fs.existsSync(Run)){await Hoek.wait(1000 * 3);}\n                 Fs.writeFileSync(Run, 'Hello World');\n-                console.log(request.query)\n+                console.log(request.query.id)\n                 \n                 const save = async ()=>{\n                     await Hoek.wait(1000 * 60 * 10);\n                     console.log(\"执行成功！\")\n"
                },
                {
                    "date": 1698375806900,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -43,9 +43,9 @@\n         handler: async (request, h)=> {\n             try{\n                 if(Fs.existsSync(Run)){await Hoek.wait(1000 * 3);}\n                 Fs.writeFileSync(Run, 'Hello World');\n-                console.log(request.query.id)\n+                console.log(request.query.id);\n                 \n                 const save = async ()=>{\n                     await Hoek.wait(1000 * 60 * 10);\n                     console.log(\"执行成功！\")\n"
                },
                {
                    "date": 1698375989326,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -44,9 +44,9 @@\n             try{\n                 if(Fs.existsSync(Run)){await Hoek.wait(1000 * 3);}\n                 Fs.writeFileSync(Run, 'Hello World');\n                 console.log(request.query.id);\n-                \n+                console.log(Fs.readFileSync(Run, 'utf-8'))\n                 const save = async ()=>{\n                     await Hoek.wait(1000 * 60 * 10);\n                     console.log(\"执行成功！\")\n                     serverStatus();\n"
                },
                {
                    "date": 1698376018326,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -42,9 +42,9 @@\n         path: '/',\n         handler: async (request, h)=> {\n             try{\n                 if(Fs.existsSync(Run)){await Hoek.wait(1000 * 3);}\n-                Fs.writeFileSync(Run, 'Hello World');\n+                Fs.writeFileSync(Run, `Hello World ${i++}`);\n                 console.log(request.query.id);\n                 console.log(Fs.readFileSync(Run, 'utf-8'))\n                 const save = async ()=>{\n                     await Hoek.wait(1000 * 60 * 10);\n"
                },
                {
                    "date": 1698376030040,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -42,9 +42,9 @@\n         path: '/',\n         handler: async (request, h)=> {\n             try{\n                 if(Fs.existsSync(Run)){await Hoek.wait(1000 * 3);}\n-                Fs.writeFileSync(Run, `Hello World ${i++}`);\n+                Fs.writeFileSync(Run, `Hello World ${1++}`);\n                 console.log(request.query.id);\n                 console.log(Fs.readFileSync(Run, 'utf-8'))\n                 const save = async ()=>{\n                     await Hoek.wait(1000 * 60 * 10);\n"
                },
                {
                    "date": 1698376039635,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -42,9 +42,9 @@\n         path: '/',\n         handler: async (request, h)=> {\n             try{\n                 if(Fs.existsSync(Run)){await Hoek.wait(1000 * 3);}\n-                Fs.writeFileSync(Run, `Hello World ${1++}`);\n+                Fs.writeFileSync(Run, `Hello World ${1++}`); \n                 console.log(request.query.id);\n                 console.log(Fs.readFileSync(Run, 'utf-8'))\n                 const save = async ()=>{\n                     await Hoek.wait(1000 * 60 * 10);\n"
                },
                {
                    "date": 1698376062226,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -42,8 +42,10 @@\n         path: '/',\n         handler: async (request, h)=> {\n             try{\n                 if(Fs.existsSync(Run)){await Hoek.wait(1000 * 3);}\n+                let i = 1;\n+                i++\n                 Fs.writeFileSync(Run, `Hello World ${1++}`); \n                 console.log(request.query.id);\n                 console.log(Fs.readFileSync(Run, 'utf-8'))\n                 const save = async ()=>{\n"
                },
                {
                    "date": 1698376079847,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -42,11 +42,11 @@\n         path: '/',\n         handler: async (request, h)=> {\n             try{\n                 if(Fs.existsSync(Run)){await Hoek.wait(1000 * 3);}\n-                let i = 1;\n+                let i = 0;\n                 i++\n-                Fs.writeFileSync(Run, `Hello World ${1++}`); \n+                Fs.writeFileSync(Run, `Hello World ${i}`); \n                 console.log(request.query.id);\n                 console.log(Fs.readFileSync(Run, 'utf-8'))\n                 const save = async ()=>{\n                     await Hoek.wait(1000 * 60 * 10);\n"
                },
                {
                    "date": 1698376204709,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -44,9 +44,9 @@\n             try{\n                 if(Fs.existsSync(Run)){await Hoek.wait(1000 * 3);}\n                 let i = 0;\n                 i++\n-                Fs.writeFileSync(Run, `Hello World ${i}`); \n+                Fs.writeFileSync(Run, i); \n                 console.log(request.query.id);\n                 console.log(Fs.readFileSync(Run, 'utf-8'))\n                 const save = async ()=>{\n                     await Hoek.wait(1000 * 60 * 10);\n"
                },
                {
                    "date": 1698376221298,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -42,9 +42,9 @@\n         path: '/',\n         handler: async (request, h)=> {\n             try{\n                 if(Fs.existsSync(Run)){await Hoek.wait(1000 * 3);}\n-                let i = 0;\n+                let i = Fs.readFileSync(Run, 'utf-8') || 0;\n                 i++\n                 Fs.writeFileSync(Run, i); \n                 console.log(request.query.id);\n                 console.log(Fs.readFileSync(Run, 'utf-8'))\n"
                },
                {
                    "date": 1698376273600,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -42,9 +42,9 @@\n         path: '/',\n         handler: async (request, h)=> {\n             try{\n                 if(Fs.existsSync(Run)){await Hoek.wait(1000 * 3);}\n-                let i = Fs.readFileSync(Run, 'utf-8') || 0;\n+                let i = !Fs.existsSync(Run) ? 0 : Fs.readFileSync(Run, 'utf-8');\n                 i++\n                 Fs.writeFileSync(Run, i); \n                 console.log(request.query.id);\n                 console.log(Fs.readFileSync(Run, 'utf-8'))\n"
                },
                {
                    "date": 1698376286617,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -43,8 +43,9 @@\n         handler: async (request, h)=> {\n             try{\n                 if(Fs.existsSync(Run)){await Hoek.wait(1000 * 3);}\n                 let i = !Fs.existsSync(Run) ? 0 : Fs.readFileSync(Run, 'utf-8');\n+                console.log(i)\n                 i++\n                 Fs.writeFileSync(Run, i); \n                 console.log(request.query.id);\n                 console.log(Fs.readFileSync(Run, 'utf-8'))\n"
                },
                {
                    "date": 1698376309161,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -42,9 +42,9 @@\n         path: '/',\n         handler: async (request, h)=> {\n             try{\n                 if(Fs.existsSync(Run)){await Hoek.wait(1000 * 3);}\n-                let i = !Fs.existsSync(Run) ? 0 : Fs.readFileSync(Run, 'utf-8');\n+                let i = !Fs.existsSync(Run) ? 0 : Number(Fs.readFileSync(Run, 'utf-8'));\n                 console.log(i)\n                 i++\n                 Fs.writeFileSync(Run, i); \n                 console.log(request.query.id);\n"
                },
                {
                    "date": 1698376363529,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -42,9 +42,9 @@\n         path: '/',\n         handler: async (request, h)=> {\n             try{\n                 if(Fs.existsSync(Run)){await Hoek.wait(1000 * 3);}\n-                let i = !Fs.existsSync(Run) ? 0 : Number(Fs.readFileSync(Run, 'utf-8'));\n+                let i = !Fs.existsSync(Run) ? 0 : Number(Fs.readFileSync(Run));\n                 console.log(i)\n                 i++\n                 Fs.writeFileSync(Run, i); \n                 console.log(request.query.id);\n"
                },
                {
                    "date": 1698376376051,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -43,10 +43,11 @@\n         handler: async (request, h)=> {\n             try{\n                 if(Fs.existsSync(Run)){await Hoek.wait(1000 * 3);}\n                 let i = !Fs.existsSync(Run) ? 0 : Number(Fs.readFileSync(Run));\n+                \n+                i++\n                 console.log(i)\n-                i++\n                 Fs.writeFileSync(Run, i); \n                 console.log(request.query.id);\n                 console.log(Fs.readFileSync(Run, 'utf-8'))\n                 const save = async ()=>{\n"
                },
                {
                    "date": 1698376388368,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -43,9 +43,8 @@\n         handler: async (request, h)=> {\n             try{\n                 if(Fs.existsSync(Run)){await Hoek.wait(1000 * 3);}\n                 let i = !Fs.existsSync(Run) ? 0 : Number(Fs.readFileSync(Run));\n-                \n                 i++\n                 console.log(i)\n                 Fs.writeFileSync(Run, i); \n                 console.log(request.query.id);\n"
                },
                {
                    "date": 1698376461930,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -45,9 +45,9 @@\n                 if(Fs.existsSync(Run)){await Hoek.wait(1000 * 3);}\n                 let i = !Fs.existsSync(Run) ? 0 : Number(Fs.readFileSync(Run));\n                 i++\n                 console.log(i)\n-                Fs.writeFileSync(Run, i); \n+                Fs.writeFileSync(Run, \"12312\"); \n                 console.log(request.query.id);\n                 console.log(Fs.readFileSync(Run, 'utf-8'))\n                 const save = async ()=>{\n                     await Hoek.wait(1000 * 60 * 10);\n"
                },
                {
                    "date": 1698376474797,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -45,9 +45,9 @@\n                 if(Fs.existsSync(Run)){await Hoek.wait(1000 * 3);}\n                 let i = !Fs.existsSync(Run) ? 0 : Number(Fs.readFileSync(Run));\n                 i++\n                 console.log(i)\n-                Fs.writeFileSync(Run, \"12312\"); \n+                Fs.writeFileSync(Run, String(i)); \n                 console.log(request.query.id);\n                 console.log(Fs.readFileSync(Run, 'utf-8'))\n                 const save = async ()=>{\n                     await Hoek.wait(1000 * 60 * 10);\n"
                },
                {
                    "date": 1698391462880,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -49,9 +49,9 @@\n                 Fs.writeFileSync(Run, String(i)); \n                 console.log(request.query.id);\n                 console.log(Fs.readFileSync(Run, 'utf-8'))\n                 const save = async ()=>{\n-                    await Hoek.wait(1000 * 60 * 10);\n+                    await Hoek.wait(1000 * 60 * 10); \n                     console.log(\"执行成功！\")\n                     serverStatus();\n                 }\n \n"
                },
                {
                    "date": 1698391500528,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -44,9 +44,9 @@\n             try{\n                 if(Fs.existsSync(Run)){await Hoek.wait(1000 * 3);}\n                 let i = !Fs.existsSync(Run) ? 0 : Number(Fs.readFileSync(Run));\n                 i++\n-                console.log(i)\n+                console.log(i,'-=--')\n                 Fs.writeFileSync(Run, String(i)); \n                 console.log(request.query.id);\n                 console.log(Fs.readFileSync(Run, 'utf-8'))\n                 const save = async ()=>{\n"
                },
                {
                    "date": 1698391544603,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -47,9 +47,8 @@\n                 i++\n                 console.log(i,'-=--')\n                 Fs.writeFileSync(Run, String(i)); \n                 console.log(request.query.id);\n-                console.log(Fs.readFileSync(Run, 'utf-8'))\n                 const save = async ()=>{\n                     await Hoek.wait(1000 * 60 * 10); \n                     console.log(\"执行成功！\")\n                     serverStatus();\n"
                },
                {
                    "date": 1698391578236,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -48,9 +48,9 @@\n                 console.log(i,'-=--')\n                 Fs.writeFileSync(Run, String(i)); \n                 console.log(request.query.id);\n                 const save = async ()=>{\n-                    await Hoek.wait(1000 * 60 * 10); \n+                    await Hoek.wait(1000 * 60); \n                     console.log(\"执行成功！\")\n                     serverStatus();\n                 }\n \n"
                },
                {
                    "date": 1698391743063,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -245,8 +245,8 @@\n };\n \n process.on('unhandledRejection', (err) => {\n     console.log(err);\n-    process.exit(1);\n+    // process.exit(1);\n });\n \n init();\n\\ No newline at end of file\n"
                },
                {
                    "date": 1698391797165,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -48,9 +48,9 @@\n                 console.log(i,'-=--')\n                 Fs.writeFileSync(Run, String(i)); \n                 console.log(request.query.id);\n                 const save = async ()=>{\n-                    await Hoek.wait(1000 * 60); \n+                    await Hoek.wait(1000 * 60 * 10); \n                     console.log(\"执行成功！\")\n                     serverStatus();\n                 }\n \n"
                }
            ],
            "date": 1698116593430,
            "name": "Commit-0",
            "content": "'use strict';\n\nconst Hapi = require('@hapi/hapi');\nconst os = require('node:os');\nconst util = require('node:util');\nconst child_process = require(\"node:child_process\");\nconst exec = util.promisify(child_process.exec);\nconst spawn = child_process.spawn;\nconst spawnSync = child_process.spawnSync;\nconst Boom = require('@hapi/boom');\nconst Hoek = require('@hapi/hoek');\nconst Fs = require('node:fs');\nconst Path = require('node:path');\nconst { getSignedUrl } = require(\"@aws-sdk/s3-request-presigner\");\nconst Request = require('request');\nconst { S3Client, GetObjectCommand,PutObjectCommand, ListObjectsV2Command, DeleteObjectCommand } = require(\"@aws-sdk/client-s3\");\nconst s3Client = new S3Client({\n    region:\"ap-east-1\",\n    credentials:{\n        accessKeyId:\"AKIAQ5QAJCD2C3HB2TXB\",\n        secretAccessKey:\"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\"\n    }\n})\nconst init = async () => {\n\n    const server = Hapi.server({\n        port: 8888,\n        host: '0.0.0.0'  //服务器运行填写私有地址\n    });\n\n    await server.register(require('@hapi/vision'));\n\n    server.views({\n        engines: { html: require('handlebars') },\n        path: __dirname + '/templates'\n    });\n\n    server.route({\n        method: 'GET',\n        path: '/',\n        handler: async (request, h)=> {\n            const context = {title: 'RVc'};\n            return h.view('index', context);\n        }\n    });\n\n    //node 执行shell并传递参数给python实例\n    server.route({\n        method: 'GET',\n        path: '/shell',\n        handler: async (request, h)=> {\n            const shell = async (d,cmd)=>{\n                const shellSync = async ()=>{\n                    return new Promise(resolve => {\n                        const res = spawn(d, cmd); \n                        const result = {};\n                        res.stdout.on('data', (data) => {\n                            console.log(`stdout: ${data}`);\n                        })\n                        res.stderr.on('data', (data) => {\n                            result.message = data\n                            console.error(`stderr: ${data}`);\n                        });\n                        res.on('close', (code) => {\n                            result.status = !code\n                            resolve(result)\n                            console.log(`child process exited with code ${code}`);\n                        });\n                    }); \n                } \n                let {status,message} = await shellSync();\n                if(!status){ throw Boom.badRequest(message)}\n            }    \n            await shell('node',['test.js']);\n            await shell('python3',['test.py',`--dir=testdir`,`--name=testname`]);\n            return h.response('shell');\n        }\n    });\n\n    //上传到本地文件\n    server.route({\n        method: 'POST',\n        path: '/upload',\n        options:{\n            payload: {\n                output: 'stream',                                           //参考https://hapijs.com/api#-routeoptionspayloadoutput\n                parse:true,\n                multipart: true,\n                maxBytes:1048576 * 50,     //允许上传 50mb\n                timeout:1000 * 60            //上传超时默认60秒\n            },\n        },\n        handler: async (request, h)=> {\n            const {file} = request.payload;\n            const name = file.hapi.filename;\n            //判断文件夹是否存在，不存在创建\n            const exitsFolder = async (reaPath)=>{\n                const absPath = Path.join(process.cwd(), reaPath);\n                try {\n                await Fs.promises.stat('absPath');\n                } catch (e) {\n                await Fs.promises.mkdir(absPath, {recursive: true});\n                }\n            };\n            const filePath = \"/upload\"\n            await exitsFolder(filePath);\n            const filePathName = Path.join(process.cwd(),`${filePath}/${name}`)\n            await file.promises.pipe(Fs.createWriteStream(filePathName));\n            return h.response('success');\n            \n        }\n    });\n\n    //aws3 实例\n    server.route({\n        method: 'POST',\n        path: '/aws3',\n        options:{\n            payload: {\n                output: 'stream',          //可以设置data,file等                                 //参考https://hapijs.com/api#-routeoptionspayloadoutput\n                parse:true,\n                multipart: true,\n                maxBytes:1048576 * 100,     //允许上传 50mb\n                timeout:1000 * 60            //上传超时默认60秒\n            },\n        },\n        handler: async (request, h)=> {\n            try {\n                \n                //从bucket获取一张图片，并在60m后过期\n                const getObjectURL = async (Key)=>{\n                    const command = new GetObjectCommand({\n                        Bucket:\"shihuojian-private-test\",\n                        Key\n                    });\n                    return await getSignedUrl(s3Client,command,{ expiresIn: 60 });\n                }\n                // const res = await getObjectURL('upload/image-1697713779579.jpeg');\n\n                //生成一个临时上传文件url接口，有效期10s,不设置貌似900s后过期\n                const putObject = async (filename,ContentType)=>{\n                    const command = new PutObjectCommand({\n                        Bucket:\"shihuojian-private-test\",\n                        Key:`upload/${filename}`,\n                        ContentType\n                    });\n                    return await getSignedUrl(s3Client,command,{ expiresIn: 60 });\n                }\n                // const res = await putObject(`image-${Date.now()}.jpeg`,\"image/jpeg\")\n\n                //列出/目录\n                const listObjects = async ()=>{\n                    const command = new ListObjectsV2Command({\n                        Bucket:\"shihuojian-private-test\",\n                        Key:`/`\n                    });\n                    return await s3Client.send(command);\n                }\n                // const res = await listObjects();\n\n                //删除文件,有问题因为key暴露给github，被aws检测到了自动增加了防止删除策略。\n                const delObjects = async ()=>{\n                    const command = new DeleteObjectCommand({\n                        Bucket:\"shihuojian-private-test\",\n                        Key:'3.png'\n                    });\n                    await s3Client.send(command);\n                }\n                // const res = await delObjects();\n\n                //上传文件\n                const uploadObject = async(Key,Body,ContentType)=>{\n                    const command = new PutObjectCommand({\n                        Bucket:\"shihuojian-private-test\",Key,Body,ContentType\n                    });\n                    return await s3Client.send(command)\n                }\n                const file = request.payload.file;\n                const name = `${Date.now()}-${Path.basename(file.hapi.filename)}`;  //如果是模型的话需要固定名称，不然训练有问题,\n                await uploadObject(name,file._data,file.hapi.headers[\"content-type\"]);\n                const url = await getObjectURL(name);   //获取到的图片无法访问，需要apn，解决办法可以在服务器获取数据流输出\n                const base64 = Buffer.from(url).toString('base64');\n                return h.response(base64);\n\n            } catch (error) {\n                throw Boom.badRequest(error)\n            }    \n            \n        }\n    });\n\n    //直接输出stream，可以国内限制以及破解防盗链等\n    server.route({\n        method: 'GET',\n        path: '/url/{url}',\n        handler: async (request, h)=> {\n            try{\n                const url = request.params.url;\n                if(url){\n                    Request.get(Buffer.from(url, 'base64').toString('ascii').replace(/&amp;/g,\"&\")).pipe(request.raw.res);\n                    return h.abandon\n                }else{\n                    return h.close\n                }\n            } catch (error) {\n                throw Boom.badRequest(error)\n            }    \n        }\n    });\n\n\n\n    await server.start();\n    console.log('Server running on %s', server.info.uri);\n};\n\nprocess.on('unhandledRejection', (err) => {\n    console.log(err);\n    process.exit(1);\n});\n\ninit();"
        }
    ]
}